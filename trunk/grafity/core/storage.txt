The ``example`` module
======================

Using ``factorial``
-------------------

This is an example text file in reStructuredText format.  First import
``factorial`` from the ``example`` module:

    >>> from grafity.core.storage import Storage, Container, Item, Attr

Writing attributes:

An attribute class defines:
    * the metakit columns that it requires for saving 
    * def spec(self, name): return '%s_x:I,%s_y:I' % (name,)
    * def to_cols(self, value):
    * def from_cols(self, cols):

class Attribute(object):
    def convert(self, value):  

You define new classes derived from Item, like this

    >>> class Column(Item):
    ...     colname = Attr.String()
    ... 
    >>> class Folder(Item):
    ...     name = Attr.String()
    ...     number = Attr.Integer()
    ...     columns = Container(Column)
    ...     col2 = Container(Column)
    ...
    >>> class Meta(Item):
    ...     name = Attr.String()
    ...     value = Attr.String()
    ...
    >>> class Store(Storage):
    ...     folders = Container(Folder)
    ...     meta = Container(Meta)
    ...
    >>> st = Store()
    >>> f = st.folders.create()
    >>> f.name = 'foo'
    >>> f.name
    'foo'
    >>> st.undo()
    >>> f.name
    ''
    >>> st.redo()
    >>> f.name
    'foo'
    >>> f.number = 15
    >>> f.number
    15
    >>> c = f.columns.create()
    >>> len(f.columns)
    1
    >>> st.undo()
