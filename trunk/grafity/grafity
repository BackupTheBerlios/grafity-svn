#!/usr/bin/env python

import os, sys
from qt import QSplashScreen, QPixmap, QApplication

DATADIR = os.path.normpath(os.path.abspath(os.path.dirname(sys.argv[0]))+'/../') + '/'
sys.path.append(DATADIR)
sys.path.append(DATADIR+'/grafity/thirdparty/')
sys.path.append("/usr/local/lib/python2.4/site-packages/numpy-0.9.4-py2.4-linux-i686.egg")

import logging
logging.basicConfig(format="%(asctime)s [%(name)s] %(message)s")

from optparse import OptionParser
parser = OptionParser()
parser.add_option('-l', '--log', dest='log', help='Log program events')
options, args = parser.parse_args()

if options.log is not None:
    for l in options.log.split(','):
        logging.getLogger(l).setLevel(logging.DEBUG)



class GrafitSplash(QSplashScreen):
    def __init__(self, pixmap):
        QSplashScreen.__init__(self, pixmap)

    def drawContents(self, painter):
        font = painter.font()
        font.setPointSize(10)
        QSplashScreen.drawContents(self, painter)
#        text = 'r'+REVISION
#        painter.drawText(418, 100, text, len(text))


app = QApplication(sys.argv)
splash = GrafitSplash(QPixmap(DATADIR + '/data/images/logos/grafity.png'))
splash.show()
splash.message('')

from ui_main import MainWindow
mainwin = MainWindow()
mainwin.app = app
splash.finish(mainwin)
app.setMainWidget(mainwin)
mainwin.show()
app.exec_loop()
